syntax = "proto3";
package leishmaniapp.cloud.auth;

option java_package = "com.leishmaniapp.cloud.auth";
option java_multiple_files = true;
option csharp_namespace = "Leishmaniapp.Cloud.Auth";
option go_package = "leishmaniapp.cloud;proto";

import "model.proto";
import "types.proto";

/// Authentication service
/// Generates and validates JWT tokens
service AuthService {
  /// Authenticate an user and return its token
  rpc Authenticate(AuthRequest) returns (AuthResponse);

  /// Verify the authenticity of a token
  /// Returns OK if the token is valid, INVALID_TOKEN if the token is invalid
  rpc VerifyToken(TokenRequest) returns (types.StatusResponse);

  /// Invalidate a given token (Only 1 token is valid at a given time)
  rpc InvalidateSession(TokenRequest) returns (types.StatusResponse);

  /// Decode token contents
  rpc DecodeToken(TokenRequest) returns (DecodeResponse);
}

/// Authentication request payload
message AuthRequest {
  string email = 1;
  string password = 2;
}

/// Server response for the GRPC auth service
message AuthResponse {
  types.StatusResponse status = 1;
  optional string token = 2;
}

/// Request to check a token validation or invalidate a token
message TokenRequest { string token = 1; }

/// JWT token payload (registered + custom claims)
/// Contains the information of the authenticated specialist
message TokenPayload {
  /// Previous version had expiration time, now tokens do not expire
  reserved 1;

  sint64 iat = 2;
  model.Specialist specialist = 4;
}

/// [DecodeToken] response
message DecodeResponse {
  types.StatusResponse status = 1;
  optional TokenPayload payload = 2;
}
